---
cache:
  directories:
    - "$HOME/.pip/cache"
    - "$PYENV_ROOT/cache"

env:
  global:
    - PYTHON_CONFIGURE_OPTS="--enable-shared"
    # - PYENV_ROOT="$HOME/.pyenv"
    # - PATH="$PYENV_ROOT/bin:$PYENV_ROOT/shims:$PATH"
    # - PYENV_VERSION=3.7.4
    - _USER=travis
    - _GROUP=staff
    - _TRAVIS_CI=1

# env:
#   global:
#   - LC_CTYPE=en_US.UTF-8
#   - LANG=en_US.UTF-8
#   - LANGUAGE=en_US.UTF-8

# FIXME: Enable this
# matrix:
#   fast_finish: true
#   allow_failures:
#     - osx_image: xcode8


# Reference:
#   https://docs.travis-ci.com/user/reference/osx/
#   https://docs.travis-ci.com/user/languages/objective-c/
#   https://docs.travis-ci.com/user/build-stages/
#   https://github.com/ReactiveCocoa/ReactiveSwift/blob/master/.travis.yml


# --------------------------
matrix:
  include:
  # ORIGINAL WORKING VERSION
  - name: "High Sierra (10.13) and xcode9.3"
    os: osx
    sudo: required
    language: objective-c
    # 10.13 (see https://docs.travis-ci.com/user/osx-ci-environment/#OS-X-Version)
    osx_image: xcode9.3
    xcode_sdk: macosx10.13
    # env: MY_RUBY_VERSION=""

  # - name: "Sierra (10.12) and xcode8.3"
  #   os: osx
  #   sudo: required
  #   language: objective-c
  #   osx_image: xcode8.3
  #   xcode_sdk: macosx10.12


  # - name: "Sierra (10.12) and xcode9"
  #   os: osx
  #   sudo: required
  #   language: objective-c
  #   osx_image: xcode9
  #   xcode_sdk: macosx10.12
  #   env: MY_HOMEBREW_UPDATE="1"

  # - name: "Sierra (10.12) and xcode9.1"
  #   os: osx
  #   sudo: required
  #   language: objective-c
  #   osx_image: xcode9.1
  #   xcode_sdk: macosx10.12

  # - name: "Sierra (10.12) and xcode9.2"
  #   os: osx
  #   sudo: required
  #   language: objective-c
  #   osx_image: xcode9.2
  #   xcode_sdk: macosx10.12

  - name: "High Sierra (10.13) and xcode9.4"
    os: osx
    sudo: required
    language: objective-c
    osx_image: xcode9.4
    xcode_sdk: macosx10.13

  - name: "Mojave (10.14) and xcode9.4"
    os: osx
    sudo: required
    language: objective-c
    # osx_image: xcode9.4
    xcode_sdk: macosx10.14

before_install:
  # ---------------------
  # SOURCE: https://github.com/Martiusweb/asynctest/blob/292e7519949901dfc49638cad2ff6c067e8a9dcb/.travis.yml
  - brew update
  - brew upgrade pyenv || brew install pyenv || true
  - pyenv install 3.7.4
  - pyenv local 3.7.4
  - eval "$(pyenv init -)"
  - python3 -m venv env
  - pyenv local --unset
  - source env/bin/activate
  # -----------------------
  - xcodebuild -version

install:
  - source env/bin/activate
  - curl https://bootstrap.pypa.io/get-pip.py | python
  # - python -m pip install --upgrade wheel>=0.30.0 setuptools>=36.6.0
  - python -m pip install --upgrade --user wheel setuptools
  - brew install ansible

  # Add ansible.cfg to pick up roles path.
  - mv ansible.cfg-travis ansible.cfg
  - cat ansible.cfg

  # Add a hosts file.
  - sudo mkdir -p /etc/ansible
  - sudo touch /etc/ansible/hosts
  - "echo -e '[local]\nlocalhost ansible_connection=local' | sudo tee -a /etc/ansible/hosts > /dev/null"


script:
  - _USER=travis
  - _GROUP=staff
  - _TRAVIS_CI=1
  # - brew reinstall pyenv
  # - brew reinstall pyenv-virtualenv
  # - brew reinstall pyenv-virtualenvwrapper
  # - export PATH="$PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH"
  # - python -m ensurepip --user
  # - source ./pyenv_test.sh
  - brew install bash-completion2 || true
  # - brew install bats || true
  # - brew install coreutils || true
  - brew install findutils || true
  - brew install fpp || true
  - brew install fzf || true
  # - brew install git || true
  # - brew install go || true
  # - brew install gpg || true
  # - brew install htop-osx || true
  # - brew install httpie || true
  - brew install hub || true
  # - brew install iftop || true
  # - brew install iperf || true
  - brew install jq || true
  # - brew install libevent || true
  # - brew install libffi || true
  # - brew install libyaml || true
  # - brew install mcrypt || true
  - brew install moreutils || true
  # - brew install mtr || true
  - brew install netcat || true
  - brew install nmap || true
  # - brew install node || true
  # - brew install nodejs || true
  - brew install nvm || true
  # - brew install openssl || true
  # - brew install pkg-config || true
  - brew install pv || true
  - brew install pyenv || true
  # - brew install pyenv-ccache || true
  - brew install pyenv-virtualenv || true
  - brew install pyenv-virtualenvwrapper || true
  - brew install python || true
  - brew install python2 || true
  - brew install rbenv || true
  - brew install readline || true
  - brew install reattach-to-user-namespace || true
  # - brew install ruby-build || true
  # - brew install sqlite || true
  - brew install ssh-copy-id || true
  # - brew install task || true
  - brew install the_silver_searcher || true
  - brew install tmux || true
  - brew install tree || true
  # - brew install unrar || true
  - brew install vim || true
  # - brew install watch || true
  # - brew install wget || true
  # - brew install wrk || true
  # - brew install youtube-dl || true
  - brew install direnv || true
  - brew install zsh || true

  - source install.sh
  - "/usr/local/bin/zsh -l -c 'alias'"

  # - brew install --verbose --with-python --devel bossjones/scarlett-deps/cmu-sphinxbase; brew install --verbose --with-python bossjones/scarlett-deps/cmu-pocketsphinx
  # - export LD_LIBRARY_PATH=/usr/local/lib
  # - env PKG_CONFIG_PATH="/usr/local/opt/libffi/lib/pkgconfig" pip install pygobject==3.28.3 ptpython black isort ipython pdbpp Pillow matplotlib numpy_ringbuffer MonkeyType

# after_success:
# - "gst-inspect-1.0 pocketsphinx"
# - set -e python3 ./test.py
